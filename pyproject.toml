[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cz-linear"
version = "1.0.0"
description = "Linear-style commit convention plugin for Commitizen"
readme = "README.md"
authors = [
    {name = "Quantivly", email = "dev@quantivly.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Version Control :: Git",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
keywords = ["commitizen", "conventional-commits", "linear", "git", "version-control"]
requires-python = ">=3.8"
dependencies = [
    "commitizen>=3.0.0",
    "typing-extensions>=4.0.0;python_version<'3.10'",
]

[project.urls]
Homepage = "https://github.com/quantivly/cz-linear"
Documentation = "https://github.com/quantivly/cz-linear#readme"
"Bug Reports" = "https://github.com/quantivly/cz-linear/issues"
Source = "https://github.com/quantivly/cz-linear"

[project.entry-points."commitizen.plugin"]
cz_linear = "cz_linear.cz_linear:LinearCz"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "build>=1.0",
    "twine>=4.0",
]

[tool.setuptools.packages.find]
include = ["cz_linear*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.coverage.run]
source = ["cz_linear"]
omit = ["tests/*"]